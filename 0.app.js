(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[0],{

/***/ "./node_modules/vue-next-level-scroll/dist/vue-next-level-scroll.es.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/vue-next-level-scroll/dist/vue-next-level-scroll.es.js ***!
  \*****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(process) {var index = {\n  functional: true,\n  render: function render(h, _ref) {\n    var children = _ref.children,\n        data = _ref.data,\n        _ref$props = _ref.props,\n        target = _ref$props.target,\n        scrollFunction = _ref$props.scrollFunction,\n        _ref$props$shouldNavi = _ref$props.shouldNavigate,\n        shouldNavigate = _ref$props$shouldNavi === void 0 ? false : _ref$props$shouldNavi,\n        _ref$props$navigation = _ref$props.navigationType,\n        navigationType = _ref$props$navigation === void 0 ? 'push' : _ref$props$navigation,\n        _ref$props$tag = _ref$props.tag,\n        tag = _ref$props$tag === void 0 ? 'div' : _ref$props$tag,\n        $router = _ref.parent.$router,\n        _ssrNode = _ref._ssrNode;\n\n    var clickFunction = function clickFunction() {\n      var fn = scrollFunction || defaultScrollFunction;\n      fn(target, {\n        shouldNavigate: shouldNavigate,\n        navigationType: navigationType,\n        $router: $router\n      });\n    };\n\n    return h(tag, Object.assign({}, data, {\n      on: {\n        // Ignore scroll function on server side\n        click: _ssrNode || process.server ? undefined : clickFunction\n      }\n    }), children);\n  }\n};\n\nvar defaultScrollFunction = function defaultScrollFunction(rawTarget, _ref2) {\n  return new Promise(function ($return, $error) {\n    var shouldNavigate, navigationType, $router, target, currentRoute, hash, fullPath, newPath, node;\n    shouldNavigate = _ref2.shouldNavigate, navigationType = _ref2.navigationType, $router = _ref2.$router;\n    return Promise.resolve(new Promise(function ($return, $error) {\n      if (typeof rawTarget === 'function') {\n        return Promise.resolve(rawTarget()).then($return, $error);\n      }\n\n      return $return(rawTarget);\n    })).then(function ($await_4) {\n      try {\n        target = $await_4;\n\n        // If no target given, auto scroll to top\n        if (!target) {\n          window.scroll({\n            top: 0,\n            behavior: 'smooth'\n          });\n\n          if (shouldNavigate && $router) {\n            currentRoute = $router.currentRoute;\n            hash = currentRoute.hash;\n            fullPath = currentRoute.fullPath;\n            newPath = fullPath.replace(hash, '');\n            navigate($router, newPath, navigationType);\n          }\n\n          return $return();\n        }\n\n        node = document.querySelector(target);\n\n        // If target prop is present but the node does not exist, send an error\n        if (!node) {\n          // eslint-disable-next-line no-console\n          return $return(console.error(\"Could not scroll to \".concat(target)));\n        }\n\n        node.scrollIntoView({\n          behavior: 'smooth'\n        });\n\n        if (shouldNavigate && $router) {\n          navigate($router, target, navigationType);\n        }\n\n        return $return();\n      } catch ($boundEx) {\n        return $error($boundEx);\n      }\n    }, $error);\n  });\n};\n\nvar navigate = function navigate($router, path, type) {\n  $router[type](path);\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (index);\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../process/browser.js */ \"./node_modules/process/browser.js\")))\n\n//# sourceURL=webpack:///./node_modules/vue-next-level-scroll/dist/vue-next-level-scroll.es.js?");

/***/ })

}]);